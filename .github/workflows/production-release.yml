name: Envger CI

on:
  # Evento para cuando se crea o actualiza un Pull Request
  pull_request:
    branches:
      - develop
      - main

  # Evento para cuando se hace push a main (reemplaza pull_request_target)
  push:
    branches:
      - main

  # Evento para cuando un Pull Request es cerrado (posible merge)
  pull_request_target:
    types:
      - closed
    branches:
      - develop
      - main

permissions:
  contents: write

jobs:
  # Job para verificar la construcción de la imagen en Pull Requests
  check-build-image:
    # Se ejecuta cuando el evento es 'pull_request' (creación o actualización de un PR)
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 'lts/*'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 'latest'
          cache: true # Habilita la caché de pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build the project
        run: pnpm run build

  # Job para ejecutar semantic-release cuando el PR es mergeado
  semantic-release:
    # Modificar la condición para ejecutar en push a main
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.4
        with:
          node-version: 'lts/*'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 'latest'
          cache: true

      - name: Install dependencies
        run: pnpm install

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4.1.1
        with:
          extra_plugins: |
            @semantic-release/git
            @semantic-release/exec
          dry_run: false
          branches: |
            ['main']
          extends: |
            false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXTRA_ARGS: '--force'

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

      - name: Set up Docker Buildx
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/envger:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/envger:${{ steps.semantic.outputs.new_release_version }}

      # - name: Trigger Portainer Update
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   run: |
      #     curl -X POST ${{ secrets.PORTAINER_WEBHOOK_URL }}
